import React, { useEffect, useMemo, useState } from 'react'

function isRunningInTelegram(): boolean {
  try {
    const hasObj = Boolean((window as any)?.Telegram?.WebApp)
    const qs = new URLSearchParams(window.location.search)
    // Telegram –¥–æ–±–∞–≤–ª—è–µ—Ç —ç—Ç–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –º–∏–Ω–∏‚Äë–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é
    const hasTgParams = qs.has('tgWebAppPlatform') || qs.has('tgWebAppStartParam')
    return hasObj || hasTgParams
  } catch {
    return false
  }
}

export default function App() {
  const [inTelegram, setInTelegram] = useState(false)

  useEffect(() => {
    setInTelegram(isRunningInTelegram())
  }, [])

  if (inTelegram) {
    // –≠–∫—Ä–∞–Ω –≤–Ω—É—Ç—Ä–∏ Telegram Mini App (–±–µ–∑ —Å—Å—ã–ª–∫–∏ "–û—Ç–∫—Ä—ã—Ç—å –≤ Telegram")
    return (
      <div className="app" style={{ paddingTop: 24 }}>
        <img src="/logo.png" alt="PULMP.FUN" className="logo" />
        <h1>PULMP.FUN</h1>
        <p>Telegram Mini App –∑–∞–ø—É—â–µ–Ω ‚úÖ</p>

        {/* —Å—é–¥–∞ –ø–æ–∑–∂–µ –¥–æ–±–∞–≤–∏–º: Connect Phantom / Create Token / Buy / Sell */}
        <div className="card" style={{maxWidth:520}}>
          <h2>Devnet –±–∏–ª–¥</h2>
          <p>–ì–æ—Ç–æ–≤–æ: –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –∫–∞–∫ –º–∏–Ω–∏‚Äë–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ. –î–∞–ª—å—à–µ –ø–æ–¥–∫–ª—é—á–∞–µ–º Phantom.</p>
        </div>
      </div>
    )
  }

  // –≠–∫—Ä–∞–Ω –≤ –æ–±—ã—á–Ω–æ–º –±—Ä–∞—É–∑–µ—Ä–µ
  return (
    <div className="app">
      <img src="/logo.png" alt="PULMP.FUN" className="logo" />
      <h1>PULMP.FUN</h1>
      <p>Welcome to the Mini App üöÄ</p>
      <a className="btn" href="https://t.me/pulmpfunbot?startapp=launch">
        –û—Ç–∫—Ä—ã—Ç—å –≤ Telegram
      </a>
    </div>
  )
}
